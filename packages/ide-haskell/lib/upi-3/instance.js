"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const _1 = require("./");
const AtomTypes = require("atom");
var CompositeDisposable = AtomTypes.CompositeDisposable;
function instance(pluginManager, options, featureSet) {
    const pluginName = options.name;
    const disposables = new CompositeDisposable();
    const messageProvider = pluginManager.resultsDB.registerProvider();
    disposables.add(messageProvider);
    disposables.add(_1.consume(pluginManager, options, featureSet));
    return {
        setMenu(name, menu) {
            const menuDisp = atom.menu.add([
                {
                    label: utils_1.MAIN_MENU_LABEL,
                    submenu: [{ label: name, submenu: menu }],
                },
            ]);
            disposables.add(menuDisp);
            return menuDisp;
        },
        setStatus(status) {
            return pluginManager.backendStatus(pluginName, status);
        },
        setMessages(messages) {
            messageProvider.setMessages(messages);
        },
        async addMessageTab(name, opts) {
            return pluginManager.outputPanel.createTab(name, opts);
        },
        async showTooltip({ editor, eventType, detail, tooltip, }) {
            if (eventType === undefined) {
                eventType = utils_1.getEventType(detail);
            }
            return pluginManager.tooltipRegistry.showTooltip(editor, eventType, {
                pluginName,
                tooltip,
            });
        },
        addPanelControl(def) {
            return pluginManager.outputPanel.addPanelControl(def);
        },
        addConfigParam(paramName, spec) {
            return pluginManager.configParamManager.add(pluginName, paramName, spec);
        },
        async getConfigParam(name) {
            return pluginManager.configParamManager.get(pluginName, name);
        },
        async getOthersConfigParam(plugin, name) {
            return pluginManager.configParamManager.get(plugin, name);
        },
        async setConfigParam(name, value) {
            return pluginManager.configParamManager.set(pluginName, name, value);
        },
        getEventRange(editor, typeOrDetail) {
            let type;
            if (utils_1.isTEventRangeType(typeOrDetail)) {
                type = typeOrDetail;
            }
            else {
                type = utils_1.getEventType(typeOrDetail);
            }
            const controller = pluginManager.controller(editor);
            if (!controller) {
                return undefined;
            }
            return controller.getEventRange(type);
        },
        dispose() {
            disposables.dispose();
        },
    };
}
exports.instance = instance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5zdGFuY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXBpLTMvaW5zdGFuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxvQ0FBMkU7QUFFM0UseUJBQXdDO0FBRXhDLGtDQUFpQztBQUNqQyxJQUFPLG1CQUFtQixHQUFHLFNBQVMsQ0FBQyxtQkFBbUIsQ0FBQTtBQUkxRCxrQkFDRSxhQUE0QixFQUM1QixPQUFpQyxFQUNqQyxVQUFzQjtJQUV0QixNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFBO0lBQy9CLE1BQU0sV0FBVyxHQUFHLElBQUksbUJBQW1CLEVBQUUsQ0FBQTtJQUM3QyxNQUFNLGVBQWUsR0FBRyxhQUFhLENBQUMsU0FBUyxDQUFDLGdCQUFnQixFQUFFLENBQUE7SUFDbEUsV0FBVyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQTtJQUNoQyxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQU8sQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUE7SUFFNUQsTUFBTSxDQUFDO1FBQ0wsT0FBTyxDQUFDLElBQVksRUFBRSxJQUEwQztZQUM5RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQztnQkFDN0I7b0JBQ0UsS0FBSyxFQUFFLHVCQUFlO29CQUN0QixPQUFPLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDO2lCQUMxQzthQUNGLENBQUMsQ0FBQTtZQUNGLFdBQVcsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUE7WUFDekIsTUFBTSxDQUFDLFFBQVEsQ0FBQTtRQUNqQixDQUFDO1FBQ0QsU0FBUyxDQUFDLE1BQW1CO1lBQzNCLE1BQU0sQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsQ0FBQTtRQUN4RCxDQUFDO1FBQ0QsV0FBVyxDQUFDLFFBQTJCO1lBQ3JDLGVBQWUsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDdkMsQ0FBQztRQUNELEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBWSxFQUFFLElBQWdDO1lBQ2hFLE1BQU0sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFDeEQsQ0FBQztRQUNELEtBQUssQ0FBQyxXQUFXLENBQUMsRUFDaEIsTUFBTSxFQUNOLFNBQVMsRUFDVCxNQUFNLEVBQ04sT0FBTyxHQUNnQjtZQUN2QixFQUFFLENBQUMsQ0FBQyxTQUFTLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDNUIsU0FBUyxHQUFHLG9CQUFZLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDbEMsQ0FBQztZQUNELE1BQU0sQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFO2dCQUNsRSxVQUFVO2dCQUNWLE9BQU87YUFDUixDQUFDLENBQUE7UUFDSixDQUFDO1FBQ0QsZUFBZSxDQUFJLEdBQThCO1lBQy9DLE1BQU0sQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUN2RCxDQUFDO1FBQ0QsY0FBYyxDQUFJLFNBQWlCLEVBQUUsSUFBdUI7WUFDMUQsTUFBTSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUMxRSxDQUFDO1FBQ0QsS0FBSyxDQUFDLGNBQWMsQ0FBSSxJQUFZO1lBQ2xDLE1BQU0sQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFJLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUNsRSxDQUFDO1FBQ0QsS0FBSyxDQUFDLG9CQUFvQixDQUN4QixNQUFjLEVBQ2QsSUFBWTtZQUVaLE1BQU0sQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFJLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUM5RCxDQUFDO1FBQ0QsS0FBSyxDQUFDLGNBQWMsQ0FBSSxJQUFZLEVBQUUsS0FBUztZQUM3QyxNQUFNLENBQUMsYUFBYSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBSSxVQUFVLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFBO1FBQ3pFLENBQUM7UUFDRCxhQUFhLENBQUMsTUFBa0IsRUFBRSxZQUFzQztZQUN0RSxJQUFJLElBQXFCLENBQUE7WUFDekIsRUFBRSxDQUFDLENBQUMseUJBQWlCLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNwQyxJQUFJLEdBQUcsWUFBWSxDQUFBO1lBQ3JCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixJQUFJLEdBQUcsb0JBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUNuQyxDQUFDO1lBQ0QsTUFBTSxVQUFVLEdBQUcsYUFBYSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtZQUNuRCxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7Z0JBQ2hCLE1BQU0sQ0FBQyxTQUFTLENBQUE7WUFDbEIsQ0FBQztZQUNELE1BQU0sQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3ZDLENBQUM7UUFDRCxPQUFPO1lBQ0wsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFBO1FBQ3ZCLENBQUM7S0FDRixDQUFBO0FBQ0gsQ0FBQztBQWhGRCw0QkFnRkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNQUlOX01FTlVfTEFCRUwsIGdldEV2ZW50VHlwZSwgaXNURXZlbnRSYW5nZVR5cGUgfSBmcm9tICcuLi91dGlscydcbmltcG9ydCB7IFBsdWdpbk1hbmFnZXIgfSBmcm9tICcuLi9wbHVnaW4tbWFuYWdlcidcbmltcG9ydCB7IGNvbnN1bWUsIEZlYXR1cmVTZXQgfSBmcm9tICcuLydcbmltcG9ydCAqIGFzIFVQSSBmcm9tICdhdG9tLWhhc2tlbGwtdXBpJ1xuaW1wb3J0ICogYXMgQXRvbVR5cGVzIGZyb20gJ2F0b20nXG5pbXBvcnQgQ29tcG9zaXRlRGlzcG9zYWJsZSA9IEF0b21UeXBlcy5Db21wb3NpdGVEaXNwb3NhYmxlXG5pbXBvcnQgVGV4dEVkaXRvciA9IEF0b21UeXBlcy5UZXh0RWRpdG9yXG5pbXBvcnQgVEV2ZW50UmFuZ2VUeXBlID0gVVBJLlRFdmVudFJhbmdlVHlwZVxuXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFuY2UoXG4gIHBsdWdpbk1hbmFnZXI6IFBsdWdpbk1hbmFnZXIsXG4gIG9wdGlvbnM6IFVQSS5JUmVnaXN0cmF0aW9uT3B0aW9ucyxcbiAgZmVhdHVyZVNldDogRmVhdHVyZVNldFxuKTogVVBJLklVUElJbnN0YW5jZSB7XG4gIGNvbnN0IHBsdWdpbk5hbWUgPSBvcHRpb25zLm5hbWVcbiAgY29uc3QgZGlzcG9zYWJsZXMgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpXG4gIGNvbnN0IG1lc3NhZ2VQcm92aWRlciA9IHBsdWdpbk1hbmFnZXIucmVzdWx0c0RCLnJlZ2lzdGVyUHJvdmlkZXIoKVxuICBkaXNwb3NhYmxlcy5hZGQobWVzc2FnZVByb3ZpZGVyKVxuICBkaXNwb3NhYmxlcy5hZGQoY29uc3VtZShwbHVnaW5NYW5hZ2VyLCBvcHRpb25zLCBmZWF0dXJlU2V0KSlcblxuICByZXR1cm4ge1xuICAgIHNldE1lbnUobmFtZTogc3RyaW5nLCBtZW51OiBSZWFkb25seUFycmF5PEF0b21UeXBlcy5NZW51T3B0aW9ucz4pIHtcbiAgICAgIGNvbnN0IG1lbnVEaXNwID0gYXRvbS5tZW51LmFkZChbXG4gICAgICAgIHtcbiAgICAgICAgICBsYWJlbDogTUFJTl9NRU5VX0xBQkVMLFxuICAgICAgICAgIHN1Ym1lbnU6IFt7IGxhYmVsOiBuYW1lLCBzdWJtZW51OiBtZW51IH1dLFxuICAgICAgICB9LFxuICAgICAgXSlcbiAgICAgIGRpc3Bvc2FibGVzLmFkZChtZW51RGlzcClcbiAgICAgIHJldHVybiBtZW51RGlzcFxuICAgIH0sXG4gICAgc2V0U3RhdHVzKHN0YXR1czogVVBJLklTdGF0dXMpIHtcbiAgICAgIHJldHVybiBwbHVnaW5NYW5hZ2VyLmJhY2tlbmRTdGF0dXMocGx1Z2luTmFtZSwgc3RhdHVzKVxuICAgIH0sXG4gICAgc2V0TWVzc2FnZXMobWVzc2FnZXM6IFVQSS5JUmVzdWx0SXRlbVtdKSB7XG4gICAgICBtZXNzYWdlUHJvdmlkZXIuc2V0TWVzc2FnZXMobWVzc2FnZXMpXG4gICAgfSxcbiAgICBhc3luYyBhZGRNZXNzYWdlVGFiKG5hbWU6IHN0cmluZywgb3B0czogVVBJLklTZXZlcml0eVRhYkRlZmluaXRpb24pIHtcbiAgICAgIHJldHVybiBwbHVnaW5NYW5hZ2VyLm91dHB1dFBhbmVsLmNyZWF0ZVRhYihuYW1lLCBvcHRzKVxuICAgIH0sXG4gICAgYXN5bmMgc2hvd1Rvb2x0aXAoe1xuICAgICAgZWRpdG9yLFxuICAgICAgZXZlbnRUeXBlLFxuICAgICAgZGV0YWlsLFxuICAgICAgdG9vbHRpcCxcbiAgICB9OiBVUEkuSVNob3dUb29sdGlwUGFyYW1zKSB7XG4gICAgICBpZiAoZXZlbnRUeXBlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgZXZlbnRUeXBlID0gZ2V0RXZlbnRUeXBlKGRldGFpbClcbiAgICAgIH1cbiAgICAgIHJldHVybiBwbHVnaW5NYW5hZ2VyLnRvb2x0aXBSZWdpc3RyeS5zaG93VG9vbHRpcChlZGl0b3IsIGV2ZW50VHlwZSwge1xuICAgICAgICBwbHVnaW5OYW1lLFxuICAgICAgICB0b29sdGlwLFxuICAgICAgfSlcbiAgICB9LFxuICAgIGFkZFBhbmVsQ29udHJvbDxUPihkZWY6IFVQSS5UQ29udHJvbERlZmluaXRpb248VD4pIHtcbiAgICAgIHJldHVybiBwbHVnaW5NYW5hZ2VyLm91dHB1dFBhbmVsLmFkZFBhbmVsQ29udHJvbChkZWYpXG4gICAgfSxcbiAgICBhZGRDb25maWdQYXJhbTxUPihwYXJhbU5hbWU6IHN0cmluZywgc3BlYzogVVBJLklQYXJhbVNwZWM8VD4pIHtcbiAgICAgIHJldHVybiBwbHVnaW5NYW5hZ2VyLmNvbmZpZ1BhcmFtTWFuYWdlci5hZGQocGx1Z2luTmFtZSwgcGFyYW1OYW1lLCBzcGVjKVxuICAgIH0sXG4gICAgYXN5bmMgZ2V0Q29uZmlnUGFyYW08VD4obmFtZTogc3RyaW5nKTogUHJvbWlzZTxUIHwgdW5kZWZpbmVkPiB7XG4gICAgICByZXR1cm4gcGx1Z2luTWFuYWdlci5jb25maWdQYXJhbU1hbmFnZXIuZ2V0PFQ+KHBsdWdpbk5hbWUsIG5hbWUpXG4gICAgfSxcbiAgICBhc3luYyBnZXRPdGhlcnNDb25maWdQYXJhbTxUPihcbiAgICAgIHBsdWdpbjogc3RyaW5nLFxuICAgICAgbmFtZTogc3RyaW5nLFxuICAgICk6IFByb21pc2U8VCB8IHVuZGVmaW5lZD4ge1xuICAgICAgcmV0dXJuIHBsdWdpbk1hbmFnZXIuY29uZmlnUGFyYW1NYW5hZ2VyLmdldDxUPihwbHVnaW4sIG5hbWUpXG4gICAgfSxcbiAgICBhc3luYyBzZXRDb25maWdQYXJhbTxUPihuYW1lOiBzdHJpbmcsIHZhbHVlPzogVCk6IFByb21pc2U8VCB8IHVuZGVmaW5lZD4ge1xuICAgICAgcmV0dXJuIHBsdWdpbk1hbmFnZXIuY29uZmlnUGFyYW1NYW5hZ2VyLnNldDxUPihwbHVnaW5OYW1lLCBuYW1lLCB2YWx1ZSlcbiAgICB9LFxuICAgIGdldEV2ZW50UmFuZ2UoZWRpdG9yOiBUZXh0RWRpdG9yLCB0eXBlT3JEZXRhaWw6IFRFdmVudFJhbmdlVHlwZSB8IE9iamVjdCkge1xuICAgICAgbGV0IHR5cGU6IFRFdmVudFJhbmdlVHlwZVxuICAgICAgaWYgKGlzVEV2ZW50UmFuZ2VUeXBlKHR5cGVPckRldGFpbCkpIHtcbiAgICAgICAgdHlwZSA9IHR5cGVPckRldGFpbFxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHlwZSA9IGdldEV2ZW50VHlwZSh0eXBlT3JEZXRhaWwpXG4gICAgICB9XG4gICAgICBjb25zdCBjb250cm9sbGVyID0gcGx1Z2luTWFuYWdlci5jb250cm9sbGVyKGVkaXRvcilcbiAgICAgIGlmICghY29udHJvbGxlcikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkXG4gICAgICB9XG4gICAgICByZXR1cm4gY29udHJvbGxlci5nZXRFdmVudFJhbmdlKHR5cGUpXG4gICAgfSxcbiAgICBkaXNwb3NlKCkge1xuICAgICAgZGlzcG9zYWJsZXMuZGlzcG9zZSgpXG4gICAgfSxcbiAgfVxufVxuIl19