"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atomAPI = require("atom");
class Button {
    constructor(description, icon) {
        this.emitter = new atomAPI.Emitter();
        this.on = this.emitter.on.bind(this.emitter);
        this.startClick = false;
        this._isEnabled = true;
        this.element = document.createElement('button');
        this.element.className = 'btn btn-primary icon';
        this.element.classList.add('icon-' + icon);
        this.tooltip = atom.tooltips.add(this.element, {
            title: description,
        });
        this.element.addEventListener('mousedown', () => {
            this.startClick = true;
        });
        this.element.addEventListener('click', () => {
            if (this.startClick && this._isEnabled) {
                this.emitter.emit('click', undefined);
            }
        });
    }
    set isEnabled(enabled) {
        if (enabled) {
            this.element.classList.remove('disabled');
        }
        else {
            this.element.classList.add('disabled');
        }
        this._isEnabled = enabled;
    }
    cancelClick() {
        this.startClick = false;
    }
    destroy() {
        this.tooltip.dispose();
    }
}
exports.Button = Button;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGliLXNyYy92aWV3cy9CdXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxnQ0FBZ0M7QUFFaEM7SUFXRSxZQUFZLFdBQW1CLEVBQUUsSUFBWTtRQVRyQyxZQUFPLEdBRVYsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUE7UUFFbkIsT0FBRSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDdEMsZUFBVSxHQUFHLEtBQUssQ0FBQTtRQUNsQixlQUFVLEdBQUcsSUFBSSxDQUFBO1FBSXZCLElBQUksQ0FBQyxPQUFPLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUUvQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxzQkFBc0IsQ0FBQTtRQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxDQUFBO1FBRTFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUM3QyxLQUFLLEVBQUUsV0FBVztTQUNuQixDQUFDLENBQUE7UUFFRixJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUU7WUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUE7UUFDeEIsQ0FBQyxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUU7WUFDMUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxDQUFBO1lBQ3ZDLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxJQUFJLFNBQVMsQ0FBQyxPQUFnQjtRQUM1QixFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQzNDLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUN4QyxDQUFDO1FBRUQsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUE7SUFDM0IsQ0FBQztJQUVNLFdBQVc7UUFDaEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUE7SUFDekIsQ0FBQztJQUVNLE9BQU87UUFDWixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ3hCLENBQUM7Q0FDRjtBQWhERCx3QkFnREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXRvbUFQSSA9IHJlcXVpcmUoJ2F0b20nKVxuXG5leHBvcnQgY2xhc3MgQnV0dG9uIHtcbiAgcHVibGljIGVsZW1lbnQ6IEhUTUxFbGVtZW50XG4gIHByaXZhdGUgZW1pdHRlcjogYXRvbUFQSS5FbWl0dGVyPHtcbiAgICBjbGljazogdW5kZWZpbmVkXG4gIH0+ID0gbmV3IGF0b21BUEkuRW1pdHRlcigpXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbWVtYmVyLW9yZGVyaW5nXG4gIHB1YmxpYyBvbiA9IHRoaXMuZW1pdHRlci5vbi5iaW5kKHRoaXMuZW1pdHRlcilcbiAgcHJpdmF0ZSBzdGFydENsaWNrID0gZmFsc2VcbiAgcHJpdmF0ZSBfaXNFbmFibGVkID0gdHJ1ZVxuICBwcml2YXRlIHRvb2x0aXA6IGF0b21BUEkuRGlzcG9zYWJsZVxuXG4gIGNvbnN0cnVjdG9yKGRlc2NyaXB0aW9uOiBzdHJpbmcsIGljb246IHN0cmluZykge1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG5cbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NOYW1lID0gJ2J0biBidG4tcHJpbWFyeSBpY29uJ1xuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdpY29uLScgKyBpY29uKVxuXG4gICAgdGhpcy50b29sdGlwID0gYXRvbS50b29sdGlwcy5hZGQodGhpcy5lbGVtZW50LCB7XG4gICAgICB0aXRsZTogZGVzY3JpcHRpb24sXG4gICAgfSlcblxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoKSA9PiB7XG4gICAgICB0aGlzLnN0YXJ0Q2xpY2sgPSB0cnVlXG4gICAgfSlcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5zdGFydENsaWNrICYmIHRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdCgnY2xpY2snLCB1bmRlZmluZWQpXG4gICAgICB9XG4gICAgfSlcbiAgfVxuXG4gIHNldCBpc0VuYWJsZWQoZW5hYmxlZDogYm9vbGVhbikge1xuICAgIGlmIChlbmFibGVkKSB7XG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZGlzYWJsZWQnKVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZGlzYWJsZWQnKVxuICAgIH1cblxuICAgIHRoaXMuX2lzRW5hYmxlZCA9IGVuYWJsZWRcbiAgfVxuXG4gIHB1YmxpYyBjYW5jZWxDbGljaygpIHtcbiAgICB0aGlzLnN0YXJ0Q2xpY2sgPSBmYWxzZVxuICB9XG5cbiAgcHVibGljIGRlc3Ryb3koKSB7XG4gICAgdGhpcy50b29sdGlwLmRpc3Bvc2UoKVxuICB9XG59XG4iXX0=