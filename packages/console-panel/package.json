{
  "_args": [
    [
      {
        "raw": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
        "spec": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
        "type": "local"
      },
      "/private/tmp/apm-install-dir-118622-55204-3q27ei.a4c2yjsjor"
    ]
  ],
  "_from": "../d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
  "_id": "console-panel@0.3.0",
  "_inCache": true,
  "_location": "/console-panel",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
    "spec": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
  "_shasum": "31d7f2e7bdd7cb9ad86016302eb738009af63564",
  "_shrinkwrap": null,
  "_spec": "/private/tmp/d-118622-55204-1ya0j30.ds7xc7hkt9/package.tgz",
  "_where": "/private/tmp/apm-install-dir-118622-55204-3q27ei.a4c2yjsjor",
  "bugs": {
    "url": "https://github.com/spark/console-panel/issues"
  },
  "consumedServices": {
    "tool-bar": {
      "versions": {
        "^0 || ^1": "consumeToolBar"
      }
    }
  },
  "dependencies": {
    "atom-space-pen-views": "^2.2.0",
    "event-kit": "^2.2.0"
  },
  "description": "Read only log console panel",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "homepage": "https://github.com/spark/console-panel#readme",
  "keywords": [],
  "license": "MIT",
  "main": "./lib/console",
  "name": "console-panel",
  "optionalDependencies": {},
  "providedServices": {
    "console-panel": {
      "description": "Read only log console",
      "versions": {
        "1.0.0": "provideConsolePanel"
      }
    }
  },
  "readme": "# Atom Console package\n\n**This isn't a terminal**. It's only a log console. Great for showing compilation output, long responses or general logs.\n\n![Screenshot](https://github.com/spark/console-panel/raw/master/resources/screenshot.png)\n\n## Usage\n\nBy itself package doesn't do anything but it provides a service other packages can consume:\n\n`package.json`\n```json\n\"consumedServices\": {\n  \"console-panel\": {\n    \"versions\": {\n      \"^1.0.0\": \"consumeConsolePanel\"\n    }\n  }\n}\n```\n\n`main.coffee`\n```coffeescript\nconsumeConsolePanel: (@consolePanel) ->\n\nlog: (message) ->\n\t@consolePanel.log(message)\n```\n\n## API reference\n\nWhen consuming console panel you'll get instance of `ConsoleManager` which has following methods:\n\n###### toggle()\nToggles console panel.\n\n###### log(message, level='info')\nLogs a message. `message` can be `String` or a custom `View` that will be appended.\n\n###### error(message)\nLogs an error.\n\n###### warn(message)\nLogs a warning.\n\n###### notice(message)\nLogs a notice.\n\n###### debug(message)\nLogs an debug message.\n\n###### raw(rawText, level='info', lineEnding=\"\\n\")\nLogs a raw message. `rawText` will be split by `lineEnding` and each line will be added separately as `level`.\n\n###### clear()\nClears whole console.\n\n## TODO\n\n* Write specs\n* Add level filtering\n* Show timestamp\n* \"Go to latest\" button\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/spark/console-panel.git"
  },
  "version": "0.3.0"
}
