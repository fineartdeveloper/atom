{
  "_args": [
    [
      {
        "raw": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
        "spec": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/apm-install-dir-118521-12022-1w6tnbw.khrlm4e7b9"
    ]
  ],
  "_from": "../d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
  "_id": "ide-haskell-hie@0.10.1",
  "_inCache": true,
  "_location": "/ide-haskell-hie",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
    "spec": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
  "_shasum": "16dd8d2dbce68612c8459662432223ff7556e36a",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/d-118521-12022-ugw9ui.6yjy8pvi/package.tgz",
  "_where": "/private/var/folders/_z/qj8040sj6vlc7wnjkw2ndpvw0000gn/T/apm-install-dir-118521-12022-1w6tnbw.khrlm4e7b9",
  "activationCommands": {},
  "bugs": {
    "url": "https://github.com/Tehnix/ide-haskell-hie"
  },
  "configSchema": {
    "hiePath": {
      "title": "Absolute path to hie executable",
      "order": 1,
      "type": "string",
      "default": "hie",
      "description": ""
    },
    "useHieWrapper": {
      "title": "Use the hie-wrapper",
      "order": 2,
      "type": "boolean",
      "default": false,
      "description": "Automatically try to select a hie version that matches the GHC version of the project (overwrites the hie path)"
    },
    "useCustomHieWrapper": {
      "title": "Use a custom hie wrapper",
      "order": 3,
      "type": "boolean",
      "default": false,
      "description": "Use your own custom wrapper for hie (remember to specify the path!). This will take effect over useHieWrapper."
    },
    "useCustomHieWrapperPath": {
      "title": "The path to your custom hie wrapper",
      "order": 4,
      "type": "string",
      "default": "",
      "description": "Specify the path to your own custom hie wrapper (e.g. /Users/Alice/.hie-wrapper.sh, ${HOME}/wrapper.sh or ${workspaceFolder}/wrapper.sh)."
    },
    "isDebug": {
      "title": "Turn on debugging output",
      "order": 5,
      "type": "boolean",
      "default": false,
      "description": ""
    },
    "hieLoggingPath": {
      "title": "Log to a file (if debugging is on)",
      "order": 6,
      "type": "string",
      "default": "/tmp/hie.log",
      "description": ""
    }
  },
  "consumedServices": {
    "linter-indie": {
      "versions": {
        "2.0.0": "consumeLinterV2"
      }
    },
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    },
    "atom-ide-busy-signal": {
      "versions": {
        "0.1.0": "consumeBusySignal"
      }
    },
    "datatip": {
      "versions": {
        "0.1.0": "consumeDatatip"
      }
    }
  },
  "dependencies": {
    "atom-languageclient": "^0.9.2",
    "atom-package-deps": "^4.6.1"
  },
  "description": "Haskell LSP plugin for HIE (Haskell IDE Engine)",
  "devDependencies": {},
  "engines": {
    "atom": ">=1.21.0 <2.0.0"
  },
  "enhancedScopes": [
    "source.haskell",
    "text.tex.latex.haskell"
  ],
  "eslintConfig": {
    "parserOptions": {
      "ecmaVersion": 6
    },
    "globals": [
      "atom"
    ],
    "rules": {
      "space-before-function-paren": [
        "error",
        "never"
      ]
    }
  },
  "homepage": "https://github.com/Tehnix/ide-haskell-hie#readme",
  "keywords": [
    "haskell",
    "lsp",
    "ide",
    "hie"
  ],
  "license": "MIT",
  "main": "./lib/ide-haskell-hie",
  "name": "ide-haskell-hie",
  "optionalDependencies": {},
  "package-deps": [
    "atom-ide-ui",
    "language-haskell"
  ],
  "prettier": {
    "printWidth": 100
  },
  "providedServices": {
    "autocomplete.provider": {
      "versions": {
        "2.0.0": "provideAutocomplete"
      }
    },
    "code-format.range": {
      "versions": {
        "0.1.0": "provideCodeFormat"
      }
    },
    "code-highlight": {
      "versions": {
        "0.1.0": "provideCodeHighlight"
      }
    },
    "definitions": {
      "versions": {
        "0.1.0": "provideDefinitions"
      }
    },
    "hyperclick": {
      "versions": {
        "0.1.0": "provideHyperclick"
      }
    },
    "find-references": {
      "versions": {
        "0.1.0": "provideFindReferences"
      }
    },
    "outline-view": {
      "versions": {
        "0.1.0": "provideOutlines"
      }
    },
    "code-actions": {
      "versions": {
        "0.1.0": "provideCodeActions"
      }
    }
  },
  "readme": "# Atom plugin for HIE LSP server\nRudimentary support for [HIE](https://github.com/haskell/haskell-ide-engine), relies on [atom-ide-ui](https://atom.io/packages/atom-ide-ui) for displaying LSP interactions, and [language-haskell](https://atom.io/packages/language-haskell) to identify Haskell files. Internatlly uses [atom-languageclient](https://github.com/atom/atom-languageclient) for the LSP client, and [HIE](https://github.com/haskell/haskell-ide-engine) as the LSP server.\n\nTo get hie to automatically detect the correct hie version to use based on your projects GHC version, enable the experimental flag 'Use hie-wrapper', and make sure to build your project using the Makefile in the [HIE](https://github.com/haskell/haskell-ide-engine) repository (builds multiple versions of hie).\n\n## Installation\n\nYou can install `ide-haskell-hie` by using [`apm`](https://github.com/atom/apm).\n```\napm install ide-haskell-hie\n```\nOr via _Atom > Settings view > Install Packages > Search packages > ide-haskell-hie_\n\n### From source\nTo contribute to `ide-haskell-hie` you might want to install it from source:\n```\n# Get source from `ide-haskell-hie` repository\ngit clone git@github.com:Tehnix/ide-haskell-hie.git\ncd ide-haskell-hie\n# install dependencies\nnpm install\n# link local version in `dev` mode\napm link --dev\n# start Atom in `dev` mode\natom --dev\n# To unlink local version of `ide-haskell-hie` run\napm unlink --dev\n```\nFor more information about `apm` and `link` check [Contributing to Official Atom Packages]( https://flight-manual.atom.io/hacking-atom/sections/contributing-to-official-atom-packages/#contributing-to-official-atom-packages).\n\n\n## Configuration\n\nThe plugin should work out-the-box, but your environment may differ for many reasons, and the following are some configurations that might help you get it working.\n\n- `Absolute path to hie executable` will set the path to hie, in case it's not on your $PATH.\n- `Use hie wrapper` makes Atom use the `hie-wrapper.sh` file to start hie through. This does assume that you built the hie executable using `make build`, but will fall back to plain `hie`.\n- `Use custom hie wrapper` enables you to use your own custom hie wrapper script, if the standard one doesn't suit your need (e.g. to use with nix).\n- `The path to your custom hie wrapper` specifies the path to the custom wrapper, and is required for it to take effect.\n- `Turn on debugging output` passes the `--debug` flag to hie (although not if using a custom wrapper, then you're on your own).\n- `Log to a file (if debugging is on)` will set the log file that debug writes to.\n\nFor additional debugging (e.g. stderr), you can enable `Settings -> Core -> Debug L S P`, and then view the output in the Atom Developer Console.\n\n\n## A few screenshots of the working things\n#### Type/Datatips information on hover & Definitions/Hyperclick\n![Definitions/Hypercick support](https://user-images.githubusercontent.com/1189998/30351887-6a3f4d70-9858-11e7-87ae-ab90be448023.png)\n\n#### Linter/diagnostics on save\n![Linter Errors](https://user-images.githubusercontent.com/1189998/30351907-7d3d585e-9858-11e7-9a2f-66a8a1582010.png)\n\n#### Outline view & Highlighting\n![Outline view on the right side and highlight of anotherFunc](https://user-images.githubusercontent.com/1189998/30351896-71e56dca-9858-11e7-85d7-1d90eee11807.png)\n\n#### Code actions\n![Code actions being applied](https://user-images.githubusercontent.com/1189998/32152232-092b5aaa-bd66-11e7-8b48-583f21a9231e.gif)\n\n#### Code format\nNo screenshot really necessary here.\n\n## Not implemented\n\n- Find references (HIE does not support this yet, see [issue #361](https://github.com/haskell/haskell-ide-engine/issues/361))\n- Rename (HIE supports it, but [atom-languageclient](https://github.com/atom/atom-languageclient#capabilities) is TBD, see [issue #13](https://github.com/atom/atom-languageclient/issues/13))\n\n# Miscellaneous\nThe code for the providers that HIE supports can be found [here](https://github.com/haskell/haskell-ide-engine/blob/master/src/Haskell/Ide/Engine/Transport/LspStdio.hs#L758) (permanent link [here](https://github.com/haskell/haskell-ide-engine/blob/0e520cf8f93dbc6a41723bfc95c8c43f87fa6757/src/Haskell/Ide/Engine/Transport/LspStdio.hs#L758)).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Tehnix/ide-haskell-hie.git"
  },
  "version": "0.10.1"
}
