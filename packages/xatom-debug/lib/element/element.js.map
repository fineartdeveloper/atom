{"version":3,"file":"element.js","sourceRoot":"","sources":["../../src/element/element.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX;;;;GAIG;AAEH,MAAM,qBAAsB,IAAY;IACtC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;AAC5C,CAAC;AAED,MAAM,wBAAyB,MAAmB,EAAE,QAAQ;IAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC7B,QAAQ,GAAG,CAAE,QAAQ,CAAE,CAAA;IACzB,CAAC;IACD,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAED,MAAM,wBAAyB,OAAO,EAAE,OAAQ;IAC9C,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC9C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACZ,IAAI,MAAM,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QACnC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YACf,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE;gBAChE,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;aAClC,CAAC,CAAC,CAAC;QACN,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrB,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;QACzC,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9E,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpB,OAAO,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;QACxC,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrB,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,GAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACtF,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,KAAK,aAAa,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAA;QAChE,CAAC;IACH,CAAC;IACD,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nexport function createText (text: string): Text {\n  return document.createTextNode(`${text}`);\n}\n\nexport function insertElement (target: HTMLElement, elements) {\n  if (!Array.isArray(elements)) {\n    elements = [ elements ]\n  }\n  elements.forEach((el) => target.appendChild(el));\n  return target;\n}\n\nexport function createElement (tagName, options?) {\n  let element = document.createElement(tagName);\n  if (options) {\n    let extras = options.options || {};\n    if (options.className) {\n      element.className = options.className;\n    }\n    if (options.id) {\n      element.setAttribute('id', options.id);\n    }\n    if (extras.tooltip) {\n      extras.tooltip['subscriptions'].add(atom['tooltips'].add(element, {\n        title: extras.tooltip.title || ''\n      }));\n    }\n    if (extras.className) {\n      element.classList.add(extras.className)\n    }\n    if (extras.click) {\n      element.addEventListener('click', (e) => {\n        extras.click(e);\n      });\n    }\n    if (extras.change) {\n      element.addEventListener('change', (e) => extras.change(e.target.value, e));\n    }\n    if (extras.disabled) {\n      element['disabled'] = extras.disabled;\n    }\n    if (options.elements) {\n      let contents = Array.isArray(options.elements) ? options.elements: [options.elements];\n      contents.forEach((content) => insertElement(element, content))\n    }\n  }\n  return element;\n}\n"]}