{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport { XAtomDebug } from './xatom-debug'\nconst { CompositeDisposable } = require('atom')\n\nexport default {\n  subscriptions: null,\n  toolbarPanel: null,\n  debugPanel: null,\n  consolePanel: null,\n  bugs: null,\n\n  activate (state: any) {\n    require('atom-package-deps').install('xatom-debug', true)\n    // create atom bugs instance\n    this.bugs = new XAtomDebug();\n    this.bugs.toolbarView.didRun(() => {\n      this.consolePanel.show()\n      this.debugPanel.show()\n      this.bugs.debugView.adjustDebugArea()\n    })\n    this.bugs.toolbarView.didStop(() => {\n      this.consolePanel.hide()\n      this.debugPanel.hide()\n    })\n    this.bugs.toolbarView.didToggleConsole(() => {\n      this.consolePanel[this.consolePanel.visible ? 'hide' : 'show']()\n    })\n    this.bugs.toolbarView.didToggleDebugArea(() => {\n      this.debugPanel[this.debugPanel.visible ? 'hide' : 'show']()\n      this.bugs.debugView.adjustDebugArea()\n    })\n    // set Paths\n    let projects = atom.project['getPaths']()\n    this.bugs.toolbarView.setPaths(projects)\n    // observe path changes\n    atom.project.onDidChangePaths((projects) => this.bugs.toolbarView.setPaths(projects))\n    // Toolbar Panel\n    atom.config['observe']('xatom-debug.toolbarStyle', (value) => {\n      if (this.toolbarPanel) {\n        this.toolbarPanel.destroy()\n      }\n      if (value === 'HeaderPanel') {\n        this.bugs.toolbarView.displayAsTitleBar()\n      } else {\n        this.bugs.toolbarView.displayDefault()\n      }\n      this.toolbarPanel = atom.workspace[`add${value}`]({\n        item: this.bugs.getToolbarElement()\n      });\n    })\n    // Console Panel\n    this.consolePanel = atom.workspace.addBottomPanel({\n      item: this.bugs.getConsoleElement(),\n      visible: false\n    });\n    // Debug Area Panel\n    this.debugPanel = atom.workspace.addRightPanel({\n      item: this.bugs.getDebugAreaElement(),\n      visible: false\n    });\n    // add commands\n    let commands = atom.commands.add('atom-workspace', {\n      'xatom-debug:toggle': () => {\n        let visible = this.toolbarPanel.visible\n        if (visible) {\n          this.toolbarPanel.hide()\n          this.debugPanel.hide()\n          this.consolePanel.hide()\n        } else {\n          this.toolbarPanel.show()\n          this.debugPanel.show()\n          if (this.bugs.toolbarView.isRunning) {\n            this.consolePanel.hide()\n          }\n        }\n      },\n      'xatom-debug:run': () => this.bugs.pluginManager.run({}),\n      'xatom-debug:stop': () => this.bugs.pluginManager.stop(),\n      'xatom-debug:pause': () => this.bugs.pluginManager.pause(),\n      'xatom-debug:step-over': () => this.bugs.pluginManager.stepOver(),\n      'xatom-debug:step-into': () => this.bugs.pluginManager.stepInto(),\n      'xatom-debug:step-out': () => this.bugs.pluginManager.stepOut(),\n      'xatom-debug:add-breakpoint': (event) => {\n        let editor = atom.workspace.getActiveTextEditor()\n        this.bugs.editorManager.addBreakpointFromEvent(event, editor)\n      },\n      'xatom-debug:edit-breakpoint': (event) => {\n        this.bugs.editorManager.editBreakpointFromEvent(event)\n      },\n      'xatom-debug:remove-breakpoint': (event) => {\n        this.bugs.editorManager.removeBreakpointFromEvent(event)\n      }\n    });\n    this.subscriptions = new CompositeDisposable();\n    // add commands subs\n    this.subscriptions.add(commands);\n  },\n\n  provideXAtomDebugPlugin () {\n    return this.bugs.pluginManager;\n  },\n\n  deactivate () {\n    this.subscriptions.dispose();\n    // destroys views\n    this.bugs.destroy();\n    // destroy panels\n    this.toolbarPanel.destroy();\n    this.debugPanel.destroy();\n    this.consolePanel.destroy();\n  }\n};\n"]}