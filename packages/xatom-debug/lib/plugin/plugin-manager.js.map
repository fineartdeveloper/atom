{"version":3,"file":"plugin-manager.js","sourceRoot":"","sources":["../../src/plugin/plugin-manager.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\n\nimport { EventEmitter }  from 'events';\n\nexport interface Plugin {\n  iconPath: string,\n  name: string,\n  options: any\n}\n\nexport class PluginManager {\n\n  public plugins: Array<Plugin>;\n  public activePlugin: Plugin;\n  public events: EventEmitter;\n\n  constructor () {\n    this.plugins = [];\n    this.events = new EventEmitter();\n  }\n\n  activatePlugin (plugin: Plugin) {\n    this.activePlugin = plugin;\n  }\n\n  public didAddPlugin (callback) {\n    this.events.on('addPlugin', callback);\n  }\n\n  private callOnActivePlugin (actionName, args?) {\n    if (this.activePlugin && this.activePlugin[actionName]) {\n      this.activePlugin[actionName].apply(this.activePlugin, args || []);\n    }\n  }\n\n  public requestProperties (result, inspectView) {\n    return this.callOnActivePlugin('didRequestProperties', [\n      result,\n      inspectView]);\n  }\n\n  public requestScopeProperties (result, inspectView) {\n    return this.callOnActivePlugin('didRequestScopeProperties', [\n      result,\n      inspectView]);\n  }\n\n  public evaluateExpression (expression: string, range) {\n    return this.callOnActivePlugin('didEvaluateExpression', [\n      expression,\n      range]);\n  }\n\n  public addBreakpoint (filePath: string, fileNumber: number, condition?: string) {\n    return this.callOnActivePlugin('didAddBreakpoint', [\n      filePath,\n      fileNumber,\n      condition]);\n  }\n\n  public changeBreakpoint (filePath: string, fileNumber: number, condition?: string) {\n    return this.callOnActivePlugin('didChangeBreakpoint', [\n      filePath,\n      fileNumber,\n      condition]);\n  }\n\n  public removeBreakpoint (filePath: string, fileNumber: number, condition?: string) {\n    return this.callOnActivePlugin('didRemoveBreakpoint', [\n      filePath,\n      fileNumber,\n      condition]);\n  }\n\n  public run () {\n    return this.callOnActivePlugin('didRun');\n  }\n\n  public stop () {\n    return this.callOnActivePlugin('didStop');\n  }\n\n  public pause () {\n    return this.callOnActivePlugin('didPause');\n  }\n\n  public resume () {\n    return this.callOnActivePlugin('didResume');\n  }\n\n  public stepOver () {\n    return this.callOnActivePlugin('didStepOver');\n  }\n\n  public stepInto () {\n    return this.callOnActivePlugin('didStepInto');\n  }\n\n  public stepOut () {\n    return this.callOnActivePlugin('didStepOut');\n  }\n\n  getPlugins () {\n    return this.plugins;\n  }\n\n  addPlugin (plugin: Plugin) {\n    this.plugins.push(plugin);\n    this.events.emit('addPlugin', plugin);\n  }\n\n  getPluginFromName (pluginName: string) {\n    return this.plugins.find((p) => {\n      return (p.name === pluginName)\n    })\n  }\n\n  removePlugin (plugin: Plugin) {\n\n  }\n}\n"]}