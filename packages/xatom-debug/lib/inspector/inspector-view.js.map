{"version":3,"file":"inspector-view.js","sourceRoot":"","sources":["../../src/inspector/inspector-view.ts"],"names":[],"mappings":"AAAA,WAAW,CAAA;AACX;;;;GAIG;AACH,OAAO,EAEL,UAAU,EAEV,aAAa,EACb,aAAa,EACd,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAO,QAAQ,CAAC;AAOvC,MAAM;IAGJ,YAAa,OAA6B;QACxC,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,uBAAuB,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,CAAC,CAAC,wBAAwB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,sBAAsB,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACrE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAED,qBAAqB,CAAE,OAAO,EAAE,YAAwB;QACtD,IAAI,iBAAiB,GAAG,aAAa,CAAC,SAAS,EAAE;YAC/C,SAAS,EAAE,YAAY;SACxB,CAAC,CAAA;QACF,IAAI,MAAM,GAAG,OAAO,CAAC;QACrB,EAAE,CAAC,CAAC,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,OAAO,KAAK,4BAA4B,CAAC,CAAA,CAAC;YAC3F,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;QACjC,CAAC;QACD,aAAa,CAAC,MAAM,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC3C,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI;YACxB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,IAAI,YAAY,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACzD,IAAI,aAAa,GAAG,eAAe,CAAC;gBACpC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC9B,aAAa,IAAI,kCAAkC,CAAC;gBACtD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,aAAa,IAAI,mBAAmB,CAAC;gBACvC,CAAC;gBACD,IAAI,WAAW,GAAG,aAAa,CAAC,GAAG,EAAE,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC,CAAA;gBAChE,IAAI,WAAW,GAAG,aAAa,CAAC,4BAA4B,CAAC,CAAA;gBAC7D,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;gBACvC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACd,IAAI,WAAW,GAAG,aAAa,CAAC,MAAM,EAAE;wBACtC,SAAS,EAAE,aAAa;wBACxB,QAAQ,EAAE,CAAE,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAE;qBAC1C,CAAC,CAAA;oBACF,aAAa,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;gBACzC,CAAC;gBACD,aAAa,CAAC,WAAW,EAAE,YAAY,CAAC,CAAA;gBACxC,aAAa,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;gBAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACtC,IAAI,OAAO,GAAG,IAAI,CAAC;oBACnB,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACnD,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;wBACtC,IAAI,UAAU,GAAG,WAAW,CAAC,aAAa,CAAC,aAAa,CAAgB,CAAC;wBACzE,EAAE,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;4BAC5D,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;4BACpC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;4BACtD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;4BAClD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,CAAC;4BAC/F,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;4BAClC,CAAC;4BACD,OAAO,GAAG,KAAK,CAAC;wBAClB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;4BACvC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;4BACrD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;4BACnD,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;wBACpC,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,mBAAmB,CAAE,OAAoB;QACvC,MAAM,CAAC;YACL,qBAAqB,EAAE,CAAC,YAAwB;gBAC9C,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACpD,CAAC;SACF,CAAA;IACH,CAAC;IAED,oBAAoB,CAAC,MAAW;QAC9B,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACzB,IAAI,UAAU,GAAG,eAAe,CAAC;QAEjC,MAAM,CAAA,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACnB,KAAK,QAAQ;gBACX,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC;gBAC5B,UAAU,GAAG,gBAAgB,CAAC;gBAC9B,KAAK,CAAC;YACR,KAAK,SAAS;gBACZ,UAAU,GAAG,kCAAkC,CAAC;gBAChD,KAAK,CAAC;YACR,KAAK,QAAQ;gBACX,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;gBACrB,UAAU,GAAG,kCAAkC,CAAC;gBAChD,KAAK,CAAC;YACR,KAAK,QAAQ;gBAEX,MAAM,CAAA,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtB,KAAK,MAAM;wBACT,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC;wBAC3B,KAAK,CAAC;oBACR,KAAK,MAAM;wBACT,UAAU,GAAG,+BAA+B,CAAC;wBAC7C,KAAK,GAAG,MAAM,CAAC;wBACf,KAAK,CAAC;oBACR,KAAK,WAAW;wBACd,UAAU,GAAG,+BAA+B,CAAC;wBAC7C,KAAK,GAAG,WAAW,CAAC;wBACpB,KAAK,CAAC;oBACR;wBACE,UAAU,GAAG,+BAA+B,CAAC;wBAC7C,KAAK,GAAG,MAAM,CAAC,SAAS,IAAI,KAAK,CAAC;gBACtC,CAAC;gBAED,KAAK,CAAC;YACR,KAAK,UAAU;gBACb,IAAI,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;gBAC5D,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;oBACrB,UAAU,GAAG,eAAe,CAAC;gBAC/B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAK,GAAG,UAAU,CAAC;oBACnB,UAAU,GAAG,iBAAiB,CAAC;gBACjC,CAAC;gBACD,+DAA+D;gBAC/D,KAAK,CAAC;QACV,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE;YAC3B,SAAS,EAAE,gBAAgB;YAC3B,QAAQ,EAAE;gBACR,aAAa,CAAC,MAAM,EAAE;oBACpB,SAAS,EAAE,UAAU;oBACrB,QAAQ,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;iBAC9B,CAAC;aACH;SACF,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAE,OAAoB,EAAE,MAAW;QACjD,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;QACtF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,QAAQ;YACR,aAAa,CAAC,OAAO,EAAE;gBACrB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC;aAClC,CAAC,CAAA;QACJ,CAAC;IACH,CAAC;IACD,UAAU;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n  createIcon,\n  createText,\n  createButton,\n  createElement,\n  insertElement\n} from '../element/index';\nimport { EventEmitter }  from 'events';\n\nexport interface InspectorViewOptions {\n  result: any,\n  didRequestProperties: Function\n}\n\nexport class InspectorView {\n  private element: HTMLElement\n  private events: EventEmitter\n  constructor (options: InspectorViewOptions) {\n    this.events = new EventEmitter();\n    this.element = createElement('xatom-debug-inspector');\n    this.element.addEventListener('mousewheel', (e) => {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    });\n    this.events.on('didRequestProperties', options.didRequestProperties);\n    if (Array.isArray(options.result)) {\n      this.createFromDescription(this.element, options.result);\n    } else {\n      this.createForElement(this.element, options.result);\n    }\n  }\n\n  createFromDescription (element, descriptions: Array<any>) {\n    let propertiesElement = createElement('section', {\n      className: 'properties'\n    })\n    let target = element;\n    if (element.parentElement && element.parentElement.tagName === 'xatom-debug-INSPECTOR-ITEM'){\n      target = element.parentElement;\n    }\n    insertElement(target, [propertiesElement]);\n    descriptions.forEach((desc) => {\n      if (desc.value) {\n        let valueElement = this.createValueForResult(desc.value);\n        let propertyClass = 'property-name';\n        if (desc.enumerable === false) {\n          propertyClass += ' syntax--variable property-muted';\n        } else {\n          propertyClass += ' syntax--variable';\n        }\n        let iconElement = createElement('i', { className: 'bugs-icon' })\n        let itemElement = createElement('xatom-debug-inspector-item')\n        insertElement(itemElement, iconElement)\n        if (desc.name) {\n          let nameElement = createElement('span', {\n            className: propertyClass,\n            elements: [ createText(`${desc.name}:`) ]\n          })\n          insertElement(itemElement, nameElement)\n        }\n        insertElement(itemElement, valueElement)\n        insertElement(propertiesElement, itemElement);\n        if (desc.value && desc.value.objectId) {\n          let request = true;\n          iconElement.classList.add('bugs-icon-arrow-right');\n          iconElement.addEventListener('click', (e) => {\n            let properties = itemElement.querySelector('.properties') as HTMLElement;\n            if (iconElement.classList.contains('bugs-icon-arrow-right')) {\n              iconElement.classList.add('active');\n              iconElement.classList.remove('bugs-icon-arrow-right');\n              iconElement.classList.add('bugs-icon-arrow-down');\n              if (request) {\n                this.events.emit('didRequestProperties', desc.value, this.createInspectorView(valueElement));\n              } else {\n                properties.style.display = null;\n              }\n              request = false;\n            } else {\n              iconElement.classList.remove('active');\n              iconElement.classList.remove('bugs-icon-arrow-down');\n              iconElement.classList.add('bugs-icon-arrow-right');\n              properties.style.display = 'none';\n            }\n          });\n        }\n      }\n    });\n  }\n  createInspectorView (element: HTMLElement) {\n    return {\n      insertFromDescription: (descriptions: Array<any>) => {\n        this.createFromDescription(element, descriptions);\n      }\n    }\n  }\n\n  createValueForResult(result: any) {\n    let value = result.value;\n    let valueClass = 'syntax--other';\n\n    switch(result.type) {\n      case 'string':\n        value = `\"${result.value}\"`;\n        valueClass = 'syntax--string';\n        break;\n      case 'boolean':\n        valueClass = 'syntax--constant syntax--boolean';\n        break;\n      case 'number':\n        value = result.value;\n        valueClass = 'syntax--constant syntax--numeric';\n        break;\n      case 'object':\n\n        switch(result.subtype) {\n          case 'date':\n            value = result.description;\n            break;\n          case 'null':\n            valueClass = 'syntax--constant syntax--null';\n            value = 'null';\n            break;\n          case 'undefined':\n            valueClass = 'syntax--constant syntax--null';\n            value = 'undefined';\n            break;\n          default:\n            valueClass = 'syntax--support syntax--class';\n            value = result.className || value;\n        }\n\n        break;\n      case 'function':\n        let shortName = result.description.match(/\\s(.*?\\(.*?\\))/i);\n        if (shortName && shortName[1]) {\n          value = shortName[1];\n          valueClass = 'syntax--other';\n        } else {\n          value = 'function';\n          valueClass = 'syntax--keyword';\n        }\n        // valueClass = 'syntax--entity syntax--name syntax--function';\n        break;\n    }\n    return createElement('span', {\n      className: 'property-value',\n      elements: [\n        createElement('span', {\n          className: valueClass,\n          elements: [createText(value)]\n        })\n      ]\n    });\n  }\n\n  createForElement (element: HTMLElement, result: any) {\n    if (result.objectId) {\n      this.events.emit('didRequestProperties', result, this.createInspectorView(element));\n    } else {\n      // value\n      insertElement(element, [\n        this.createValueForResult(result)\n      ])\n    }\n  }\n  getElement () {\n    return this.element;\n  }\n}\n"]}