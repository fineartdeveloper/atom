{"version":3,"file":"scheme-view.js","sourceRoot":"","sources":["../../src/scheme/scheme-view.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n  createGroupButtons,\n  createButton,\n  createIcon,\n  createIconFromPath,\n  createText,\n  createSelect,\n  createOption,\n  createElement,\n  createInput,\n  createTextEditor,\n  insertElement,\n  attachEventFromObject\n} from '../element/index'\nimport { Plugin } from '../plugin/index'\nimport { EventEmitter }  from 'events'\n\nexport interface SchemeOptions {\n  didSelectPlugin?: Function,\n  didChange?: Function\n}\n\nexport class SchemeView {\n  private element: HTMLElement\n  private listElement: HTMLElement\n  private editorElement: HTMLElement\n  private data: Object = {}\n  private events: EventEmitter\n  private panel: any\n  private activePlugin: Plugin\n  private plugins: Array<Plugin> = []\n  constructor (options: SchemeOptions) {\n    this.events = new EventEmitter()\n    this.element = document.createElement('xatom-debug-scheme')\n    this.listElement = createElement('xatom-debug-scheme-list')\n    // this.listElement.setAttribute('tabindex', '-1')\n    this.editorElement = createElement('xatom-debug-scheme-editor', {\n      // className: 'native-key-bindings'\n    })\n    insertElement(this.element, [\n      createElement('xatom-debug-scheme-content', {\n        elements: [ this.listElement, this.editorElement ]\n      }),\n      createElement('xatom-debug-scheme-buttons', {\n        elements: [\n          createButton({\n            click: () => this.close()\n          }, [createText('Close')])\n        ]\n      })\n    ])\n    let modalConfig = {\n      item: this.element,\n      visible: false\n    }\n    modalConfig['className'] = 'xatom-debug-modal'\n    this.panel = atom.workspace.addModalPanel(modalConfig)\n    attachEventFromObject(this.events, [\n      'didSelectPlugin',\n      'didChange'\n    ], options)\n  }\n  open (activePlugin?: Plugin) {\n    if (activePlugin) {\n      this.openPlugin(activePlugin)\n    }\n    this.panel.show()\n  }\n  close () {\n    this.panel.hide()\n  }\n  activatePlugin (plugin: Plugin) {\n    this.activePlugin = plugin\n  }\n  openPlugin (plugin: Plugin) {\n    let id = this.getPluginId(plugin)\n    // fund plugin and activate\n    let item = this.listElement.querySelector(`[id=\"${id}\"]`)\n    if (!item.classList.contains('active')) {\n      // remove active\n      let items = this.listElement.querySelectorAll('xatom-debug-scheme-item.active');\n      Array.from(items, (item: HTMLElement) => item.classList.remove('active'))\n      this.activatePlugin(plugin)\n      this.events.emit('didSelectPlugin', plugin)\n      // add active class\n      item.classList.add('active');\n      this.editorElement.innerHTML = '';\n      // build options\n      let optionVisibles = []\n      let optionElements = Object.keys(plugin.options).map((name) => {\n        let config = plugin.options[name];\n        let configElement = createElement('xatom-debug-scheme-config', {\n          elements: [\n            createElement('scheme-label', {\n              elements: [createText(config.title)]\n            })\n          ]\n        })\n        if (!this.data[plugin.name]) {\n          this.data[plugin.name] = {}\n        }\n        if (this.data[plugin.name][name] === undefined) {\n          this.data[plugin.name][name] = config.default\n        }\n        let controlElement\n        switch (config.type) {\n          case 'string':\n          case 'number':\n            let controlType = 'createControlText'\n            if (Array.isArray(config.enum)) {\n              controlType = 'createControlSelect'\n            }\n            controlElement = this[controlType](plugin.name, name, config)\n            break;\n          case 'boolean':\n            controlElement = this.createControlCheckbox(plugin.name, name, config)\n            break;\n          case 'object':\n            controlElement = this.createControlObject(plugin.name, name, config)\n            break;\n          case 'array':\n            controlElement = this.createControlArray(plugin.name, name, config)\n            break;\n        }\n        if (controlElement) {\n          insertElement(configElement, controlElement)\n        }\n        if (config.description && controlElement) {\n          insertElement(controlElement, createElement('p', {\n            className: 'text-muted',\n            elements: [\n              createText(config.description)\n            ]\n          }))\n        }\n        if (config.visible) {\n          let visible = config.visible\n          let visibleHandler = () => this.analizeVisibleControl(plugin.name, configElement, config.visible)\n          optionVisibles.push(visibleHandler)\n          this.events.on('didChange', visibleHandler)\n        }\n        return configElement\n      })\n      // verify visibles after element creation\n      optionVisibles.forEach((analize) => analize())\n      // insert option elements to editor\n      insertElement(this.editorElement, optionElements)\n    }\n  }\n  createControlText (pluginName: string, key: string, config: any) {\n    let value = this.data[pluginName][key] || ''\n    if (value === config.default) {\n      value = null\n    }\n    let inputElement = createTextEditor({\n      value,\n      placeholder: config.default,\n      // value: this.data[pluginName][key],\n      change: (value) => {\n        if (String(value).trim().length > 0) {\n          this.data[pluginName][key] = value\n        } else {\n          this.data[pluginName][key] = config.default\n        }\n        this.events.emit('didChange')\n      }\n    })\n    return createElement('scheme-control', {\n      elements: [inputElement]\n    })\n  }\n  createControlCheckbox (pluginName: string, key: string, config: any) {\n    return createElement('scheme-control', {\n      elements: [createInput({\n        type: 'checkbox',\n        className: 'input-checkbox',\n        value: this.data[pluginName][key],\n        change: (value) => {\n          this.data[pluginName][key] = value\n          this.events.emit('didChange')\n        }\n      })]\n    })\n  }\n  createControlSelect (pluginName: string, key: string, config: any) {\n    let selectOptions = config.enum.map((value) => createOption(value, value))\n    let selectElement = createSelect({\n      change: (value) => {\n        this.data[pluginName][key] = value\n        this.events.emit('didChange')\n      }\n    }, selectOptions)\n    selectElement.value = this.data[pluginName][key]\n    return createElement('scheme-control', {\n      elements: [ selectElement ]\n    })\n  }\n  createArrayItem (data: any, index: number) {\n    let itemInput = createInput({\n      readOnly: true,\n      value: data[index]\n    })\n    let itemElement = createElement('div', {\n      className: 'input-item',\n      elements: [\n        itemInput,\n        createButton ({\n          click: () => {\n            itemElement.remove()\n            data.splice(index, 1)\n            this.events.emit('didChange')\n          }\n        }, createIcon('remove'))\n      ]\n    })\n    return itemElement\n  }\n\n  createControlArray (pluginName: string, key: string, config: any) {\n    let source = this.data[pluginName][key]\n    let addInput: any = createTextEditor({})\n    let itemsElement = createElement('div', {\n      className: 'input-items'\n    })\n    let arrayElement = createElement('section', {\n      className: 'input-array',\n      elements: [\n        itemsElement,\n        createElement('div', {\n          className: 'input-form',\n          elements: [\n            addInput,\n            createButton({\n              click: () => {\n                let editor = addInput.getModel()\n                let value = editor.getText()\n                if (value.trim().length > 0) {\n                  let index = source.push(value)\n                  let itemElement = this.createArrayItem(source, index - 1)\n                  editor.setText('')\n                  insertElement(itemsElement, itemElement)\n                  this.events.emit('didChange')\n                }\n              }\n            }, createIcon('add'))\n          ]\n        })\n      ]\n    })\n    // restore data\n    source.forEach((item, index) => {\n      insertElement(itemsElement, this.createArrayItem(source, index))\n    })\n    return createElement('scheme-control', {\n      elements: [ arrayElement ]\n    })\n  }\n\n  createControlObject (pluginName: string, key: string, config: any) {\n    let source = this.data[pluginName][key]\n    let nameInput: any = createTextEditor({})\n    let valueInput: any = createTextEditor({})\n    let itemsElement = createElement('div', {\n      className: 'input-items'\n    })\n    let arrayElement = createElement('section', {\n      className: 'input-object',\n      elements: [\n        itemsElement,\n        createElement('div', {\n          className: 'input-form',\n          elements: [\n            nameInput,\n            valueInput,\n            createButton({\n              click: () => {\n                let nameEditor = nameInput.getModel()\n                let valueEditor = valueInput.getModel()\n                let nameValue = nameEditor.getText()\n                let value = valueEditor.getText()\n                if (nameValue.trim().length > 0 && value.trim().length > 0) {\n                  source[nameValue] = value\n                  let itemElement = this.createObjectItem(source, nameValue)\n                  nameEditor.setText('')\n                  valueEditor.setText('')\n                  insertElement(itemsElement, itemElement)\n                  this.events.emit('didChange')\n                }\n              }\n            }, createIcon('add'))\n          ]\n        })\n      ]\n    })\n    // restore data\n    Object.keys(source).forEach((name) => {\n      insertElement(itemsElement, this.createObjectItem(source, name))\n    })\n    return createElement('scheme-control', {\n      elements: [ arrayElement ]\n    })\n  }\n\n  createObjectItem (data: any, index: string) {\n    let nameInput = createInput({})\n    let valueInput = createInput({})\n    let itemElement = createElement('div', {\n      className: 'input-item',\n      elements: [\n        nameInput,\n        valueInput,\n        createButton ({\n          click: () => {\n            itemElement.remove()\n            delete data[index]\n            this.events.emit('didChange')\n          }\n        }, createIcon('remove'))\n      ]\n    })\n    nameInput.setAttribute('readonly', true)\n    valueInput.setAttribute('readonly', true)\n    nameInput.value = index\n    valueInput.value = data[index]\n    return itemElement\n  }\n\n  analizeVisibleControl (pluginName: string, element: HTMLElement, visible: any) {\n    Object.keys(visible).forEach((name) => {\n      let rules = visible[name];\n      let show = false\n      if (rules.contains && Array.isArray(rules.contains)) {\n        show = rules.contains.includes(this.data[pluginName][name])\n      }\n      if (rules.is) {\n        show = (this.data[pluginName][name] === rules.is)\n      }\n      element.style.display = show ? '' : 'none'\n    })\n  }\n  getPluginId (plugin: Plugin): string {\n    let token = btoa(plugin.name)\n    return `plugin-${token}`\n  }\n  restoreData (data) {\n    this.data = data || {}\n  }\n  getData (): Object {\n    return this.data;\n  }\n  getPluginDefaultOptions (plugin: Plugin) {\n    let defaults: any = {}\n    Object\n      .keys(plugin.options)\n      .map((optionName) => {\n        defaults[optionName] = plugin.options[optionName].default\n      })\n    return defaults\n  }\n  async getActivePluginOptions (): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      let data = this.data[this.activePlugin.name]\n      if (data && Object.keys(data).length > 0) {\n        resolve(data)\n      } else {\n        resolve(this.getPluginDefaultOptions(this.activePlugin))\n      }\n    })\n  }\n  addPlugin (plugin: Plugin) {\n    let item = createElement('xatom-debug-scheme-item', {\n      id: this.getPluginId(plugin),\n      options: {\n        click: () => {\n          this.openPlugin(plugin)\n        }\n      },\n      elements: [\n        createIconFromPath(plugin.iconPath),\n        createText(plugin.name)\n      ]\n    })\n    this.data[plugin.name] = {};\n    this.plugins.push(plugin)\n    insertElement(this.listElement, [item])\n    if (!this.activePlugin) {\n      this.activePlugin = plugin\n    }\n  }\n  getElement (): HTMLElement {\n    return this.element\n  }\n  destroy () {\n    this.element.remove()\n    this.panel.destroy()\n  }\n}\n"]}