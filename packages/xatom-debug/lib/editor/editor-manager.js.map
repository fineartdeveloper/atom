{"version":3,"file":"editor-manager.js","sourceRoot":"","sources":["../../src/editor/editor-manager.ts"],"names":[],"mappings":"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","sourcesContent":["'use babel'\n/*!\n * XAtom Debug\n * Copyright(c) 2017 Williams Medina <williams.medinaa@gmail.com>\n * MIT Licensed\n */\nimport {\n createIcon,\n createText,\n createInput,\n createButton,\n createElement,\n insertElement,\n attachEventFromObject\n} from '../element/index'\n\nimport { BreakpointManager, Breakpoint, Breakpoints } from './breakpoint-manager'\nimport { PluginManager } from '../plugin/index'\nimport { InspectorView } from '../inspector/index'\nimport { EventEmitter }  from 'events'\nimport { get } from 'lodash'\n\nexport interface EditorOptions {\n  pluginManager: PluginManager,\n  didAddBreakpoint?: Function,\n  didRemoveBreakpoint?: Function,\n  didEvaluateExpression?: Function,\n  didBreak?: Function,\n  didChange?: Function\n}\n\nexport class EditorManager {\n\n  private currentEditor: any\n\n  private currentBreakMarker: any\n  private currentExpressionMarker: any\n  private currentEvaluationMarker: any\n  private currentEvaluationElement: HTMLElement\n\n  private activateExpressionListerner: boolean = true\n  private evaluateHandler: any\n\n  public breakpointManager: BreakpointManager\n  private pluginManager: PluginManager\n  private events: EventEmitter\n\n  constructor (options: EditorOptions) {\n    this.events = new EventEmitter()\n    this.breakpointManager = new BreakpointManager()\n    this.pluginManager = options.pluginManager\n    attachEventFromObject(this.events, [\n      'didAddBreakpoint',\n      'didRemoveBreakpoint',\n      'didChangeBreakpoint',\n      'didEvaluateExpression',\n      'didBreak',\n      'didChange'\n    ], options)\n  }\n\n  restoreBreakpoints (breakpoints: Breakpoints) {\n    breakpoints.forEach(({filePath, lineNumber, condition}) => {\n      let marker\n      if (get(this, 'currentEditor.getPath') && filePath === this.currentEditor.getPath()) {\n        marker = this.createBreakpointMarkerForEditor(this.currentEditor, lineNumber)\n      }\n      this.breakpointManager.addBreakpoint(marker, lineNumber, filePath, condition)\n      this.events.emit('didAddBreakpoint', filePath, lineNumber)\n    })\n  }\n\n  getBreakpointFromEvent (event: any) {\n    let line: HTMLElement = event.target\n    let lineNumber = parseInt(line.getAttribute('data-buffer-row'), 0)\n    let editor = atom.workspace.getActiveTextEditor()\n    let filePath = editor.getPath()\n    return this.breakpointManager.getBreakpoint(filePath, lineNumber)\n  }\n\n  removeBreakpointFromEvent (event: any) {\n    let breakpoint = this.getBreakpointFromEvent(event)\n    if (breakpoint) {\n      this.removeBreakpoint(breakpoint)\n    }\n  }\n\n  editBreakpointFromEvent (event: any) {\n    let editor = atom.workspace.getActiveTextEditor()\n    let breakpoint = this.getBreakpointFromEvent(event)\n    if (breakpoint) {\n      let range = [[breakpoint.lineNumber, 0], [breakpoint.lineNumber, 0]]\n      let marker: any = editor.markBufferRange(range)\n      let conditionInput = document.createElement('atom-text-editor')\n      conditionInput.setAttribute('mini', 'true')\n      let miniEditor = conditionInput['getModel']()\n      miniEditor.setText(breakpoint.condition)\n      miniEditor.setGrammar(editor.getGrammar())\n      let conditionButton = createButton({\n        click: () => {\n          let miniEditor = conditionInput['getModel']()\n          let conditionText = miniEditor.getText()\n          breakpoint.condition = conditionText\n          setTimeout(() => {\n            this.events.emit('didChangeBreakpoint', breakpoint.filePath, breakpoint.lineNumber, breakpoint.condition)\n            this.pluginManager.changeBreakpoint(breakpoint.filePath, breakpoint.lineNumber, breakpoint.condition)\n            this.events.emit('didChange')\n          }, 500)\n          breakpointEditor.remove()\n          marker.destroy()\n        }\n      }, createIcon('check'))\n      // conditionButton.classList.add('btn-success')\n\n      let breakpointEditor: HTMLElement = createElement('div', {\n        elements: [\n          conditionInput,\n          conditionButton,\n          createElement('bugs-breakpoint-edit-arrow')\n        ]\n      })\n      let decorator = editor.decorateMarker(marker, {\n        type: 'overlay',\n        class: 'bugs-breakpoint-edit',\n        item: breakpointEditor\n      })\n      setTimeout(() => {\n        conditionInput.focus()\n        conditionInput.addEventListener('blur', (e: FocusEvent) => {\n          if(e.relatedTarget !== conditionButton) {\n            breakpointEditor.remove()\n            marker.destroy()\n          }\n        })\n      }, 0)\n    }\n  }\n\n  destroy () {\n    this.currentBreakMarker = undefined\n    this.currentExpressionMarker = undefined\n    this.currentEvaluationMarker = undefined\n    this.removeMarkers()\n  }\n\n  breakOnFile (filePath: string, lineNumber: number) {\n    // this.createConsoleLine('', [\n    //   createText('Break on'),\n    //   createText(`${filePath}:${lineNumber}`)\n    // ])\n    this.events.emit('didBreak', filePath, lineNumber)\n  }\n\n  createBreakMarker (editor, lineNumber: number) {\n    this.removeBreakMarker()\n    let range = [[lineNumber, 0], [lineNumber, 0]]\n    this.currentBreakMarker = editor.markBufferRange(range)\n    editor.decorateMarker(this.currentBreakMarker, {\n      type: 'line',\n      class: 'bugs-break-line'\n    })\n  }\n\n  removeMarkers () {\n    this.removeBreakMarker()\n    this.removeExpressionMarker()\n    this.removeEvaluationMarker()\n  }\n\n  removeBreakMarker () {\n    if (this.currentBreakMarker) {\n      this.currentBreakMarker.destroy()\n    }\n  }\n\n  removeExpressionMarker () {\n    if (this.currentExpressionMarker) {\n      this.currentExpressionMarker.destroy()\n    }\n  }\n\n  async addFeatures (editor) {\n    // restore breakpoints\n    if (get(editor, 'getPath', false)) {\n      let sourceFile = editor.getPath()\n      let breakpoints = await this.breakpointManager.getBreakpointsFromFile(sourceFile)\n      breakpoints.forEach((breakpoint: Breakpoint) => {\n        if (breakpoint.marker) breakpoint.marker.destroy()\n        breakpoint.marker = this.createBreakpointMarkerForEditor(editor, breakpoint.lineNumber)\n      })\n      this.currentEditor = editor\n      if (get(editor, 'element.addEventListener', false) &&\n        !get(editor, 'element.__atomBugsEnabledFeatures', false)) {\n        let breakpointHandler = (e) => this.addBreakpointFromEvent(e, editor)\n        let expressionHandler = (e) => this.listenExpressionEvaluations(e, editor)\n        // add breakpoint handler\n        editor.element.__atomBugsEnabledFeatures = true\n        editor.element.addEventListener('click', breakpointHandler)\n        editor.element.addEventListener('mousemove', expressionHandler)\n        editor.onDidDestroy(() => {\n          editor.element.removeEventListener('click', breakpointHandler)\n          editor.element.removeEventListener('mousemove', expressionHandler)\n        })\n      }\n    }\n  }\n\n  private removeBreakpoint (breakpoint: Breakpoint) {\n    let sourceFile = breakpoint.filePath\n    let lineNumber = breakpoint.lineNumber\n    return this\n      .breakpointManager\n      .removeBreakpoint(breakpoint)\n      .then(() => {\n        this.events.emit('didRemoveBreakpoint', sourceFile, lineNumber)\n        this.pluginManager.removeBreakpoint(sourceFile, lineNumber)\n      })\n  }\n\n  private addBreakpointFromEvent (e: MouseEvent, editor: any) {\n    let element = e.target as HTMLElement\n    if (element.classList.contains('line-number')) {\n      // toggle breakpoints\n      let lineNumber = Number(element.textContent) - 1\n      if (lineNumber >= 0) {\n        let sourceFile = editor.getPath()\n        let exists = this.breakpointManager.getBreakpoint(sourceFile, lineNumber)\n        if (exists) {\n          this.removeBreakpoint(exists)\n        } else {\n          let marker = this.createBreakpointMarkerForEditor(editor, lineNumber)\n          this\n            .breakpointManager\n            .addBreakpoint(marker, lineNumber, sourceFile)\n            .then(() => {\n              this.events.emit('didAddBreakpoint', sourceFile, lineNumber)\n              this.pluginManager.addBreakpoint(sourceFile, lineNumber)\n            })\n        }\n        this.events.emit('didChange')\n      }\n    }\n  }\n\n  private createBreakpointMarkerForEditor (editor: any, lineNumber: any) {\n    let range = [[lineNumber, 0], [lineNumber, 0]]\n    let marker = editor.markBufferRange(range)\n    let decorator = editor.decorateMarker(marker, {\n      type: 'line-number',\n      class: 'bugs-breakpoint'\n    })\n    return marker\n  }\n\n  private getEditorPositionFromEvent (editor, e: MouseEvent) {\n    let lines = editor.element.querySelector('.lines')\n    var clientX = e.clientX\n    var clientY = e.clientY\n    let clientRect = lines.getBoundingClientRect()\n    let screenPosition = editor.element.screenPositionForPixelPosition({\n      top: (clientY - clientRect.top) + editor.element.getScrollTop(),\n      left: (clientX - clientRect.left) + editor.element.getScrollLeft()\n    })\n    return editor.bufferPositionForScreenPosition(screenPosition)\n  }\n\n  private getEditorWordRangeFromPosition (editor, position) {\n    let prevRow = editor.buffer.previousNonBlankRow(position.row)\n    let endRow = editor.buffer.nextNonBlankRow(position.row)\n    if (!endRow) {\n      endRow = position.row\n    }\n    let startWord = position\n    let endWord = position\n    // /\\()\"':,.<>~!@#$%^&*|+=[]{}`?-…\n    editor.scanInBufferRange(/[ \\,\\{\\}\\(\\\\)\\[\\]^\\n]+/gm, [[prevRow, 0], position], (s) => {\n      if (s.matchText) {\n        startWord = s.range.end\n      }\n    })\n    editor.scanInBufferRange(/[ \\,\\{\\}\\(\\.\\\\)\\[\\]\\:\\/\\n]+/g, [position, [endRow, 50]], (s) => {\n      if (s.matchText) {\n        endWord = s.range.start\n        s.stop()\n      }\n    })\n    return [startWord, endWord]\n  }\n\n  private listenExpressionEvaluations (e: MouseEvent, editor: any) {\n    let sourceFile = editor.getPath()\n    let bufferPosition = this.getEditorPositionFromEvent(editor, e)\n    let scanRange = this.getEditorWordRangeFromPosition(editor, bufferPosition)\n    let expression = editor.getTextInBufferRange(scanRange)\n    clearTimeout(this.evaluateHandler)\n    this.evaluateHandler = setTimeout(() => {\n      let isEvaluationOverlay = this.currentEvaluationElement && this.currentEvaluationElement.contains(e.target as Node)\n      let isValidExpression = expression && expression.toString().trim().length > 0\n      if (!isEvaluationOverlay && isValidExpression) {\n        let evaluationView = this.createEditorEvaluationView(editor, scanRange)\n        this.pluginManager.evaluateExpression(expression, evaluationView)\n      } else if (!isEvaluationOverlay) {\n        this.removeEvaluationMarker()\n        this.removeExpressionMarker()\n      }\n    }, 2000)\n  }\n\n  createEditorEvaluationView (editor: any, range: any) {\n    return {\n      insertFromResult: (result) => {\n        this.addEditorEvaluationMarker(editor, result, range)\n      }\n    }\n  }\n\n  createInspectorOverlay (result: any) {\n    let element = createElement('xatom-debug-overlay', {\n      className: 'native-key-bindings'\n    })\n    element.setAttribute('tabindex', '0')\n    let inspector = new InspectorView({\n      result,\n      didRequestProperties: (result, inspectorView) => {\n        this.pluginManager.requestProperties(result, inspectorView)\n      }\n    })\n    return insertElement(element, [\n      createElement('xatom-debug-overlay-header', {\n        elements: [ createText(result.className || result.type) ]\n      }),\n      inspector.getElement()\n    ])\n  }\n\n  addEditorEvaluationMarker (editor: any, result: any, range) {\n    // highlight expression\n    this.removeExpressionMarker()\n    this.currentExpressionMarker = editor.markBufferRange(range)\n    editor.decorateMarker(this.currentExpressionMarker, {\n      type: 'highlight',\n      class: 'bugs-expression'\n    })\n    // overlay inspector\n    this.removeEvaluationMarker()\n    this.currentEvaluationElement = this.createInspectorOverlay(result)\n    this.currentEvaluationMarker = editor.markBufferRange(range)\n    editor.decorateMarker(this.currentEvaluationMarker, {\n      type: 'overlay',\n      class: 'bugs-expression-overlay',\n      item: this.currentEvaluationElement\n    })\n    setTimeout(() => {\n      // this.currentEvaluationElement.addEventListener('mouseleave', () => {\n      //   this.removeEvaluationMarker()\n      //   this.removeExpressionMarker()\n      // })\n      // let close = () => {\n      //   this.activateExpressionListerner = true\n      //   this.removeEvaluationMarker()\n      //   this.removeExpressionMarker()\n      // }\n      // let autoClose = setTimeout(close, 15000)\n      // element.addEventListener('mouseenter', () => {\n      //   // clearTimeout(autoClose)\n      //   this.activateExpressionListerner = false\n      //   // element.addEventListener('mouseleave', () => close())\n      // })\n    }, 250)\n  }\n\n  removeEvaluationMarker () {\n    if (this.currentEvaluationMarker) {\n      this.currentEvaluationMarker.destroy()\n      this.currentEvaluationMarker = undefined\n    }\n  }\n}\n"]}