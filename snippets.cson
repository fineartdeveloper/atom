'*':
  'reg':
    'prefix': 'reg'
    'body': '''
    (\\\\(|\\\\[)(\\\\n?)\\\\s+|(\\\\n?)\\\\s+(\\\\]|\\\\))$0
    '''
  'reg0':
    'prefix': 'reg0'
    'body': '''
    (\\\\(|\\\\[)\\\\s+|(\\\\n?)\\\\s+(\\\\]|\\\\))$0
    '''
  'reg1':
    'prefix': 'regex1'
    'body': '''
    (\\\\(|\\\\[)\\\\s+|\\\\n?\\\\s+(\\\\n?\\\\]|\\\\n?\\\\))$0
    '''
  'reg2':
    'prefix': 'regex2'
    'body': '''
    (\\\\(|\\\\[)\\\\s+|\\\\n?\\\\s+(\\\\n?\\\\]|\\\\n?\\\\))$0
    '''
  'line ———':
    'prefix': 'line'
    'body': '''
    ${1:————————————————————————————————}$0
    '''
  'getEditorAndCursor':
    'prefix': 'getac'
    'body': '''
    var __ = this.getEditorAndCursor(editor, selection);$0
    '''

'.text':
  'subscribers':
    'prefix': 'subscribers'
    'body': '''
    You\\'re receiving this newsletter because you have signed up for it on our website$0
    '''


# htaccess
'.source.htaccess':
	'IfModule':
		'prefix': 'if-module'
		'body': '''
		<IfModule ${1:module.c}>
		$2
		</IfModule>$0
		'''
		'rightLabelHTML': '<span class="snippet-label success">HTACCESS</span>'


# Shell
'.text.plain,
.source.shell':
  '#!/bin/bash':
    'prefix': 'bash'
    'body': '''
    #!/bin/bash$0
    '''
  'for..in':
    'prefix': 'for-in'
    'body': '''
    for ${1:item} in ${2:items}; do
      ${3:# ...}
    done$0
    '''
  'if..':
    'prefix': 'if'
    'body': '''
    if [[ ${1:condition} ]]; then
      ${2:# statements}
    fi$0
    '''
  'if..else':
    'prefix': 'if-else'
    'body': '''
    if [[ ${1:condition} ]]; then
      ${2:# statements}
    else
      ${3:# statements}
    fi$0
    '''
  'else..':
    'prefix': 'else'
    'body': '''
    else
      ${1:# statements}$0
    '''
  'else..if':
    'prefix': 'else-if'
    'body': '''
    elif [[ ${1:condition} ]]; then
      ${2:# statements}$0
    '''
  'while..':
    'prefix': 'while'
    'body': '''
    while [[ ${1:condition} ]]; do
      ${2:# statements}
    done$0
    '''
  'case':
    'prefix': 'case'
    'body': '''
    case ${1:word} in
      pattern)
      ;;
      *)
      ;;
    esac$0
    '''


# Coffeescript
'.source.coffee':
  'snippet with label':
    'prefix': 'label-snippet'
    'body': """
    '${1:name}':
      'prefix': '$2'
      'body': '''
      $3
      '''
      'rightLabelHTML': '<span class="snippet-label ${5:success|bi}">$4</span>$0'
    """
    'rightLabelHTML': '<span class="snippet-label success">COMMON</span>'
  'console.clear()':
    'prefix': 'clear-console'
    'body': '''
    console.clear()$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">console.clear()</span>'
  'Toolbar MDI Button':
    'prefix': 'mdi-button'
    'body': '''
    @toolBar.addButton
      callback:
        \'\': \'$2\'
      text: \'<i class="gc">${1:全}</i>\'
      html: true
      tooltip: \'$3\'
      type: \'button\'$0
    '''
  'Toolbar Iconset Button':
    'prefix': 'icon-set-button'
    'body': '''
    @toolBar.addButton
      callback:
        \'\': \'$3\'
      tooltip: \'$4\'
      icon: \'${1:icon}\'
      iconset: \'${2:mdi}\'
      type: \'button\'$0
    '''


# All comments snippets
'.source.css':
  'Section comment':
    'prefix': 'section-comment'
    'body': '''
    /*
    |--------------------------------------------------------------------------
    | ${1:Comment Heading}
    |--------------------------------------------------------------------------
    */$0
    '''
  'Block':
    'prefix': 'block'
    'body': '''
    /*
    |--------------------------------------------------------------------------
    | ${1:Comment Heading}
    |--------------------------------------------------------------------------
    */$0
    '''
  'Line comment':
    'prefix': 'line-comment'
    'body': '''
    /* ${1:Describe the relevant details.} */$0
    '''
  'Inline comment':
    'prefix': 'inline-comment'
    'body': '''
    // ${1:Describe the relevant details.}$0
    '''
  'New stylesheet':
    'prefix': 'insert-stylesheet'
    'body': '''
    ${1:element} {
      ${2:/* Positioning */}
      ${3:/* Box-model */}
      ${4:/* Typography */}
      ${5:/* Visual */}
      ${6:/* Misc */}
    }$0
    '''
  'Cover Image':
    'prefix': 'cover-img'
    'body': '''
    ${1:.img-content} {
      width: 50%;
      font-size: 0;
      line-height: 0;
      position: relative;
      letter-spacing: 0;
      background-size: cover;
      background-repeat: no-repeat;
      background-position: 50% 50%;
    }

    ${1:.img-content} img {
      min-width: 100%;
      min-height: 100%;
      height: auto;
      object-fit: cover;
      width: 100%;
    }$0
    '''

'.source.css.scss':
  '@include':
    'prefix': 'inc'
    'body': '''
    @include ${2:$1;}$0
    '''
  '@include media-breakpoint-...':
    'prefix': 'incme'
    'body': '''
    @include media-breakpoint-${1:up|down}($2) {
      $3
    }$0
    '''
  '@extend':
    'prefix': 'ext'
    'body': '''
    @extend $1;$0
    '''
  '@import':
    'prefix': 'imp'
    'body': '''
    @import "$1";$0
    '''
  'extract(...)':
    'prefix': 'ext'
    'body': '''
    extract(${1:\\$var}, ${2:1})$0
    '''


'.text.html':
  '<link...>':
    'prefix': 'link'
    'body': '''
    <link rel="${1:stylesheet${2:|canonical|icon|search}}" href="$3" type="${4:text/css${5:|image/x-icon}}" media="${6:all}" charset="${7:utf-8}" />$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">CSS</span>'
  '<meta ...>':
    'prefix': 'meta'
    'body': '''
    <meta ${1:name}="$2" content="$3">$0
    '''
  'holder.js image':
    'prefix': 'holder-img'
    'body': '''
    <img data-src="holder.js/${1:${2:300}x${3:300}}?${4:random=${5:yes}}" alt="${6:...}">$0
    '''
  'placeimg image':
    'prefix': 'place-img'
    'body': '''
    <img src="https://placeimg.com/${1:300}/${2:300}/${3:any|animals|arch|nature|people|tech}/${4:grayscale|sepia}" alt="${5:...}">$0
    '''
  '<!---->...<!---->':
    'prefix': 'block'
    'body': '''
    <!-- ${1:block container} : START -->
    $2
    <!-- ${1:block container} : END -->$0
    '''
  'script src':
    'prefix': 'script-src'
    'body': '''
    <script ${2:async }src="$1"></script>$0
    '''
  'div>container':
    'prefix': 'div-container'
    'body': '''
    <!-- #${1:foo} -->
    <div id="${1:foo}">
      ${2:<div class="container">
        ${3:<div class="row">
          ${4:<div class="col">
            $5
          </div>}
        </div>}
      </div>}
    </div>
    <!-- / #${1:foo} -->$0
    '''


'.text.html.php':
  '<?php echo... ?>':
    'prefix': 'echo'
    'body': '''
    <?php echo ${1:\\'$2\\'}; ?>$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">CSS</span>'
  '<link...>':
    'prefix': 'link'
    'body': '''
    <link rel="${1:stylesheet${2:|canonical|icon|search}}" href="$3" type="${4:text/css${5:|image/x-icon}}" media="${6:all}" charset="${7:utf-8}" />$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">CSS</span>'
  '<?php foreach () { ?>..<?php } ?>':
    'prefix': 'foreach'
    'body': '''
    <?php foreach (${1:\$var} as ${2:\$key}${4: => ${3:\$value}}) { ?>
      $5
    <?php } ?>$0
    '''
  '<?php if () { ?>..<?php } else { ?>..<?php } ?>':
    'prefix': 'ifelse'
    'body': '''
    <?php if ($1) { ?>
      $2
    <?php } else { ?>
      $3
    <?php } ?>$0
    '''
  '<?php if () { ?>..<?php } ?>':
    'prefix': 'if'
    'body': '''
    <?php if ($1) { ?>
      $2
    <?php } ?>$0
    '''
  '<?php...':
    'prefix': 'ph'
    'body': '''
    <?php$1
    '''
  '<?php...?>':
    'prefix': 'php'
    'body': '''
    <?php${1: $2 }?>$0
    '''
  'print_r':
    'prefix': 'pr'
    'body': '''
    <?php echo \\'<pre>\\'; print_r($1); echo \\'</pre>\\'; ?>$0
    '''


'.text.html.php.blade':
  '<link...>':
    'prefix': 'link'
    'body': '''
    <link rel="${1:stylesheet${2:|canonical|icon|search}}" href="$3" type="${4:text/css${5:|image/x-icon}}" media="${6:all}" charset="${7:utf-8}" />$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">CSS</span>'
  '@php':
    'prefix': 'php'
    'body': '''
    @php
    ${1://}
    @endphp$0
    '''
  '@component()':
    'prefix': 'component'
    'body': '''
    @component('${1:components}${2:}')
      ${3:}
    @endcomponent$0
    '''
  '@json()':
    'prefix': 'json'
    'body': '''
    @json(${1:\\$array})$0
    '''
  '@section()':
    'prefix': 'section'
    'body': '''
    @section('${1:name}'${2:, '$3'})${4:${5:...}@endsection}$0
    '''
  '@section':
    'prefix': 'sec'
    'disabled': true


'.source.php':
  'phpdoc':
    'prefix': 'doc'
    'body': '''
    /**
    * ${1:Register a binding with the container.}
    *
    * @param  string|array  $abstract
    * @param  \Closure|string|null  $concrete
    * @param  bool  $shared
    * @return void
    *
    * @throws \Exception
    */
    public function ${2:bind}(${3:\$abstract, \$concrete = null, \$shared = false})
    {
        ${4://}
    }$0
    '''
    'leftLabelHTML': '<span class="snippet-label success">PHP</span>'
  'echo...':
    'prefix': 'echo'
    'body': """
    echo ${1:'$2'};$0
    """
    'leftLabelHTML': '<span class="snippet-label success">PHP</span>'
  'require...':
    'prefix': 'require'
    'body': '''
    require ${1:\\'$2\\'};$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'require_once...':
    'prefix': 'require_once'
    'body': '''
    require_once ${1:\\'$2\\'};$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'include...':
    'prefix': 'include'
    'body': '''
    include ${1:\\'$2\\'};$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'include_once...':
    'prefix': 'include_once'
    'body': '''
    include_once ${1:\\'$2\\'};$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'req':
    'prefix': 'req'
  'req1':
    'prefix': 'req1'
  'if ()...;':
    'prefix': 'if_in_line'
    'body': '''
    if ($1)$2;$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'if...function_exists':
    'prefix': 'if_function_exists'
    'body': '''
    if (${2:}function_exists(\\'${1:function_name}\\')) {
      function ${1:function_name}($3) {
        ${4:// code}
      }
    }$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'if...defined':
    'prefix': 'if_defined'
    'body': '''
    if (${2:}defined(\\'${1:NAME}\\')) {
      define('${1:NAME}', ${3:\\'$4\\'});
    }$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'parse_str($str, $output)':
    'prefix': 'parse_str'
    'body': '''
    parse_str(${1:\\$str}, ${2:\\$output})$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  '<link...>':
    'prefix': 'link'
    'body': '''
    <link rel="${1:stylesheet${2:|canonical|icon|search}}" href="$3" type="${4:text/css${5:|image/x-icon}}" media="${6:all}" charset="${7:utf-8}" />$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">CSS</span>'
  'die()':
    'prefix': 'die'
    'body': '''
    die($2);$1$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'exit()':
    'prefix': 'exit'
    'body': '''
    exit($2);$1$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'break;':
    'prefix': 'break'
    'body': '''
    break;$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'
  'Section comment':
    'prefix': 'section-comment'
    'body': '''
    /*
    |--------------------------------------------------------------------------
    | ${1:Comment Heading}
    |--------------------------------------------------------------------------
    */$0
    '''
  'Block comment':
    'prefix': 'block-comment'
    'body': '''
    /*
    * ${1:Comment heading}
    *
    * ${2:Describe the relevant details do that up here if it's important enough.}
    */
    $0
    '''
  'Line comment':
    'prefix': 'line-comment'
    'body': '''
    /* ${1:Describe the relevant details.} */$0
    '''
  'Inline comment':
    'prefix': 'inline-comment'
    'body': '''
    // ${1:Describe the relevant details.}$0
    '''

  'public function':
    'prefix': 'pb-fn'
    'body': '''
    public function ${1:functionName}($2) {
      ${3://}
    }$0
    '''

  'private function':
    'prefix': 'pv-fn'
    'body': '''
    private function ${1:functionName}($2) {
      ${3://}
    }$0
    '''

  'function()':
    'prefix': 'function'
    'body': '''
    function ${1:functionName}(${2:args}) {
      ${3://}
    }$0
    '''
  'fun':
    'prefix': 'fun'

  'print_r':
    'prefix': 'pr'
    'body': '''
    echo \'<pre>\'; print_r($1); echo \'</pre>\';
    '''
  'print_var':
    'prefix': 'pv'
    'body': '''
    gct_print_var(${1:\\$var}, ${2:false});$0
    '''

  'foreach (\\$var as \\$key => \\$val)':
    'prefix': 'foreach'
    'body': '''
    foreach (${1:\\$var} as ${4:${2:\\$key} => ${3:\\$val}}) {
      ${5://}
    }$0
    '''

  'preg_replace':
    'prefix': 'preg_replace'
    'body': 'preg_replace("$1", "$2", ${3:$string})$0'
    'rightLabelHTML': '<span class="snippet-label success">PHP</span>'


# Javascript
'.source.js':
  'console.clear()':
    'prefix': 'clear-console'
    'body': '''
    console.clear();$0
    '''
    'rightLabelHTML': '<span class="snippet-label success">console.clear();</span>'
  '"key": "value"':
    'prefix': 'pr-'
    'body': '${1:key}: ${3:\'$2\'},$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  '"key": {...}':
    'prefix': 'pr-obj'
    'body': '${1:key}: \{$2\},$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  '"key": [...]':
    'prefix': 'pr-arr'
    'body': '${1:key}: \[$2\],$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'Details comment':
    'prefix': 'details-comment'
    'body': '''
    /*
    ------------------------------------------------------------------------
    ${1:Comment Heading}
    ------------------------------------------------------------------------
    ${2:Description}

    */$0
    '''
  'Section comment':
    'prefix': 'section-comment'
    'body': '''
    /*
    |--------------------------------------------------------------------------
    | ${1:Comment Heading}
    |--------------------------------------------------------------------------
    */$0
    '''
  'Block comment':
    'prefix': 'block-comment'
    'body': '''
    /*
     * ${1:Comment heading}
     *
     * ${2:Describe the relevant details do that up here if it's important enough.}
     */
     $0
    '''
  'Line comment':
    'prefix': 'line-comment'
    'body': '''
    /* ${1:Describe the relevant details.} */$0
    '''
  'Inline comment':
    'prefix': 'inline-comment'
    'body': '''
    // ${1:Describe the relevant details.}$0
    '''
  'function ...':
    'prefix': 'func'
    'body': '''
    function ${1:functionName}($2) \{
      ${3:\/\/}
    \}$0
    '''
  'function ()':
    'prefix': 'fn'
    'body': '''
    function ($1) \{
      ${2:\/\/}
    \}$0
    '''
  'alert()':
    'prefix': 'alert'
    'body': '''
    alert(${1:\'$2\'});$0
    '''
  'console.info()':
    'prefix': 'info'
    'body': '''
    console.info(${1:\'$2\'});$0
    '''
  'console.log()':
    'prefix': 'log'
    'body': '''
    console.log(${1:\'$2\'});$0
    '''
  'console.error()':
    'prefix': 'error'
    'body': '''
    console.error(${1:\'$2\'});$0
    '''
  'console.warn()':
    'prefix': 'warn'
    'body': '''
    console.warn(${1:\'$2\'});$0
    '''


# JSON
'.source.json':
  '"key": "value"':
    'prefix': 'pr-'
    'body': '"${1:key}": ${3:"$2"},$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  '"key": {...}':
    'prefix': 'pr-obj'
    'body': '"${1:key}": \{$2\},$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  '"key": [...]':
    'prefix': 'pr-arr'
    'body': '"${1:key}": \[$2\],$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'

  # Karabiner
  'com.apple.finder':
    'prefix': 'bundle.com.apple.finder'
    'body': 'com.apple.finder$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.googlecode.iterm2':
    'prefix': 'bundle.com.googlecode.iterm2'
    'body': 'com.googlecode.iterm2$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.github.atom':
    'prefix': 'bundle.com.github.atom'
    'body': 'com.github.atom$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.sublimetext.3':
    'prefix': 'bundle.com.sublimetext.3'
    'body': 'com.sublimetext.3$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.google.Chrome':
    'prefix': 'bundle.com.google.Chrome'
    'body': 'com.google.Chrome$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.apple.Safari':
    'prefix': 'bundle.com.apple.Safari'
    'body': 'com.apple.Safari$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'org.mozilla.firefox':
    'prefix': 'bundle.org.mozilla.firefox'
    'body': 'org.mozilla.firefox$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.apple.Firefox':
    'prefix': 'bundle.com.apple.Firefox'
    'body': 'com.apple.Firefox$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'com.adobe.Photoshop':
    'prefix': 'bundle.com.adobe.Photoshop'
    'body': 'com.adobe.Photoshop$0'
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'bundle':
    'prefix': 'bundle'
    'body': '''
    "^com.apple.finder$",
    "^com.googlecode.iterm2$",
    "^com.github.atom$",
    "^com.sublimetext.3$",
    "^com.google.Chrome$",
    "^com.apple.Safari$",
    "^org.mozilla.firefox$",
    "^com.apple.Firefox$",
    "^com.adobe.Photoshop$",$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'bundle-editors':
    'prefix': 'bundle-editors'
    'body': '''
    "^com.github.atom$",
    "^com.sublimetext.3$",$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'bundle-browsers':
    'prefix': 'bundle-browsers'
    'body': '''
    "^com.google.Chrome$",
    "^com.apple.Safari$",
    "^org.mozilla.firefox$",
    "^com.apple.Firefox$",$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'basic':
    'prefix': 'basic'
    'body': '''
    "basic.to_if_alone_timeout_milliseconds": ${1:1000},
    "basic.to_if_held_down_threshold_milliseconds": ${2:500},
    "basic.to_delayed_action_delay_milliseconds": ${3:500},
    "basic.simultaneous_threshold_milliseconds": ${4:50},$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'basic-alone':
    'prefix': 'basic-alone'
    'body': '''
    "basic.to_if_alone_timeout_milliseconds": ${1:1000},$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'basic-held-down':
    'prefix': 'basic-held-down'
    'body': '''
    "basic.to_if_held_down_threshold_milliseconds": ${1:500},$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'basic-delay':
    'prefix': 'basic-delay'
    'body': '''
    "basic.to_delayed_action_delay_milliseconds": ${1:500},$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
  'basic-simultaneous':
    'prefix': 'basic-simultaneous'
    'body': '''
    "basic.simultaneous_threshold_milliseconds": ${1:50},$0
    '''
    'rightLabelHTML': '<span class="snippet-label bi"></span>'
