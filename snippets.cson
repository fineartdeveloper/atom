## GLOBAL RESET
'.text.html,
.text.html.blade.php,
.text.plain,
.source.php':
  'data-target':
    'prefix': 'data-target'


'.text.html,
.text.plain':
  'Font Awesome':
    'prefix': 'fa'
    'body': '''
    <i class="${1:fa} fa-${2:icon}${3}"></i>$0
    '''


## PHP
'.text.html.php,
.text.html.blade.php':
  '<?php …':
    'prefix': 'ph'
    'body': '''
      <?php
      $0
    '''
  '<?php … ?>':
    'prefix': 'php'
    'body': '''
      <?php$1?>$0
    '''
  'print_r':
    'prefix': 'print_r'
    'body': '''
    <pre><?php print_r($1); ?></pre>$0
    '''


## PHP SOURCE
'.source.php':
  'print_r':
    'prefix': 'pr'
    'body': '''
      echo "<pre>"; print_r(${1:\\$${2:var}}); echo "</pre>";$0
    '''
  'Print Class Methods':
    'prefix': 'pr:methods'
    'body': '''
      echo "<pre>"; print_r(get_class_methods($1)); echo "</pre>";$0
    '''
  'Print Function Arguments':
    'prefix': 'pr:args'
    'body': '''
      echo "<pre>"; print_r(func_get_args()); echo "</pre>";$0
    '''
  'Laravel Collection':
    'prefix': 'la:collect'
    'body': '''
      \\$${1:collect} = ${3:\\$${2:collect}}->${4:map}(function (\\$${5:item}, \\$${6:key}) {
        ${7://}
      });$0
    '''
  'protected $var':
    'prefix': 'pt-var'
    'body': '''
      protected \\$${1:var}$2;$0
    '''
  '$var':
    'prefix': 'v'
    'body': '''
      \\$${1:var}$0
    '''
  '$var …':
    'prefix': 'v-'
    'body': '''
      \\$${1:var} = ${2:\\'${3}\\'}$0
    '''
  '$var boolean':
    'prefix': 'v-b'
    'body': '''
      \\$${1:var} = ${2:true}$0
    '''
  'if':
    'prefix': 'if'
    'body': '''
      if ($1) ${2:\\{${3}\\}}$0
    '''
  'json_encode()':
    'prefix': 'json_encode'
    'body': '''
      json_encode($1)$0
    '''
  'json_decode()':
    'prefix': 'json_decode'
    'body': '''
      json_decode($1, ${2:true})$0
    '''
  'function () …':
    'prefix': 'fn'
    'body': '''
      ${1:function} ${2:functionName}($3)
      {
        ${4://}
      }$0
    '''
  'preg_replace()':
    'prefix': 'preg_replace'
    'body': '''
      preg_replace("$1", "$2", ${4:\\$${3:var}})$0;
    '''
  'strtoupper()':
    'prefix': 'strtoupper'
    'body': '''
      strtoupper($1)$0;
    '''
  'strtolower()':
    'prefix': 'strtolower'
    'body': '''
      strtolower($1)$0;
    '''
  'return …':
    'prefix': 're-'
    'body': '''
    return ${2:\\$${1:var}};$0
    '''


## HTML TAGS
'.meta.tag.block.html,
.punctuation.definition.tag.html':
  'id':
    'prefix': '#'
    'body': 'id="$1"$0'
  'class':
    'prefix': '.'
    'body': 'class="$1"$0'
  'data-target':
    'prefix': 'data-target'
    'body': 'data-target="$1"$0'


## HTML QUOTED
# '.string.quoted.double.html,
# .string.quoted.single.html':
#   'data-target':
#     'prefix': 'data-target'
